namespace = cvlm_debug

cvlm_debug.1 = {
	type = country_event
	hidden = yes

    immediate = {
        add_technology_researched = civilizing_mission
        set_country_type = recognized
	}
}


# create a writer for White Man's burden and research Civilizing Mission
cvlm_debug.2 = {
	type = country_event
	hidden = yes

    immediate = {
		add_technology_researched = civilizing_mission
		create_character = {
			is_agitator = yes
			ideology = ideology_jingoist_leader
			on_created = {
				add_trait = literary
			}
		}
	}
}


# Transfer PHI subject status from SPA to USA 
cvlm_debug.10 = {
	type = country_event
	hidden = yes

    immediate = {
        c:PHI = {
            remove_diplomatic_pact = {
                country = c:SPA
                type = colony
            }
        }
        c:USA = {
            create_diplomatic_pact = {
                country = c:PHI
                type = colony
            }
        }
	}
}

# TEST EVENT - to test if some effect works on additional primary culture added via event, for Austria
# https://forum.paradoxplaza.com/forum/threads/victoria-iii-some-triggers-effects-for-primary-culture-are-not-working-properly.1592197/
# cvlm_debug.11 = {
# 	type = country_event
# 	placement = root
# 	duration = 2

# 	title = cvlm_debug.11.t
# 	desc = cvlm_debug.11.d
# 	flavor = cvlm_debug.11.f

# 	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
#     event_image = {
# 		video = "africa_public_protest"
# 	}

# 	icon = "gfx/interface/icons/event_icons/event_skull.dds"

# 	immediate = {
# 	    cu:south_german = { save_scope_as = austrian_culture }
# 	    cu:hungarian = { save_scope_as = hungarian_culture }
# 	}

# 	option = {
# 		name = cvlm_debug.11.1
# 		every_primary_culture = {
# 		    add_cultural_obsession = services
#         }
#    	}

# 	option = {
# 		name = cvlm_debug.11.2
#         ordered_primary_culture  = {
#             limit = { this = cu:south_german }
#             add_cultural_obsession = services
#         }
#         ordered_primary_culture  = {
#             limit = { this = cu:hungarian }
#             add_cultural_obsession = services
#         }
#    	}

# 	option = {
# 		name = cvlm_debug.11.3
# 		random_primary_culture = {
# 		    limit = { this = cu:south_german }
# 		    add_cultural_obsession = services
# 		}
# 		random_primary_culture = {
# 		    limit = { this = cu:hungarian }
# 		    add_cultural_obsession = services
# 		}
#    	}

# 	option = {
# 		name = cvlm_debug.11.4
# 		if = {
# 		    limit = { any_primary_culture = { this = cu:south_german } }
# 		    cu:south_german = { add_cultural_obsession = services }
# 		}
# 		if = {
# 		    limit = { any_primary_culture = { this = cu:hungarian } }
# 		    cu:hungarian = { add_cultural_obsession = services }
# 		}
#     }

#     option = {
# 		name = cvlm_debug.11.5
# 		if = {
# 		    limit = { cu:south_german = { is_primary_culture_of = root } }
# 		    cu:south_german = { add_cultural_obsession = services }
# 		}
# 		if = {
# 		    limit = { cu:hungarian = { is_primary_culture_of = root } }
# 		    cu:hungarian = { add_cultural_obsession = services }
# 		}
		
#     }
# }

# TEST EVENT - supplementary test of the last one, for Italy
# cvlm_debug.12 = {
# 	type = country_event
# 	placement = root
# 	duration = 2

# 	title = cvlm_debug.11.t
# 	desc = cvlm_debug.11.d
# 	flavor = cvlm_debug.11.f

# 	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
#     event_image = {
# 		video = "africa_public_protest"
# 	}

# 	icon = "gfx/interface/icons/event_icons/event_skull.dds"

# 	immediate = {
# 	    cu:south_german = { save_scope_as = austrian_culture }
# 	    cu:hungarian = { save_scope_as = hungarian_culture }
# 	}

# 	option = {
# 		name = cvlm_debug.11.1
# 		every_primary_culture = {
# 		    add_cultural_obsession = services
#         }
#    	}

# 	option = {
# 		name = cvlm_debug.11.2
# 		ordered_primary_culture  = {
# 		    limit = { this = cu:south_italian }
# 		    add_cultural_obsession = services
# 		}
# 		ordered_primary_culture  = {
# 		    limit = { this = cu:north_italian }
# 		    add_cultural_obsession = services
# 		}
# 		ordered_primary_culture  = {
# 		    limit = { this = cu:maltese }
# 		    add_cultural_obsession = services
# 		}
#    	}

# 	option = {
# 		name = cvlm_debug.11.3
# 		random_primary_culture = {
# 		    limit = { this = cu:south_italian }
# 		    add_cultural_obsession = services
# 		}
# 		random_primary_culture = {
# 		    limit = { this = cu:north_italian }
# 		    add_cultural_obsession = services
# 		}
# 		random_primary_culture = {
# 		    limit = { this = cu:maltese }
# 		    add_cultural_obsession = services
# 		}
#    	}

# 	option = {
# 		name = cvlm_debug.11.4
# 		if = {
# 		    limit = { any_primary_culture = { this = cu:south_italian } }
# 		    cu:south_italian = { add_cultural_obsession = services }
# 		}
# 		if = {
# 		    limit = { any_primary_culture = { this = cu:north_italian } }
# 		    cu:north_italian = { add_cultural_obsession = services }
# 		}
# 		if = {
# 		    limit = { any_primary_culture = { this = cu:maltese } }
# 		    cu:maltese = { add_cultural_obsession = services }
# 		}
#     }

#     option = {
# 		name = cvlm_debug.11.5
# 		if = {
# 		    limit = { cu:south_italian = { is_primary_culture_of = root } }
# 		    cu:south_italian = { add_cultural_obsession = services }
# 		}
# 		if = {
# 		    limit = { cu:north_italian = { is_primary_culture_of = root } }
# 		    cu:north_italian = { add_cultural_obsession = services }
# 		}
# 		if = {
# 		    limit = { cu:maltese = { is_primary_culture_of = root } }
# 		    cu:maltese = { add_cultural_obsession = services }
# 		}
#     }
# }